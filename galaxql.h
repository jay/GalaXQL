/////////////////////////////////////////////////////////////////////////////
// Name:        galaxql.h
// Purpose:     
// Author:      Jari Komppa
// Modified by: 
// Created:     11/05/05 21:24:25
// RCS-ID:      
// Copyright:   (c) 2005 Jari Komppa
// Licence:     
/////////////////////////////////////////////////////////////////////////////

// Generated by DialogBlocks (Personal Edition), 11/05/05 21:24:25

#ifndef _GALAXQL_H_
#define _GALAXQL_H_

#if defined(__GNUG__) && !defined(__APPLE__)
#pragma interface "galaxql.cpp"
#endif

/*!
 * Includes
 */

////@begin includes
#include "wx/frame.h"
#include "wx/splitter.h"
#include "wx/notebook.h"
#include "wx/html/htmlwin.h"
#include <wx/glcanvas.h>
////@end includes

/*!
 * Forward declarations
 */

////@begin forward declarations
class GfxPanel;
class wxNotebook;
class wxGuruSpeaksPanel;
class wxHtmlWindow;
class SqlQueryCtrl;
////@end forward declarations

/*!
 * Control identifiers
 */

////@begin control identifiers
#define ID_FRAME 10000
#define SYMBOL_GALAXQL_STYLE wxCAPTION|wxRESIZE_BORDER|wxSYSTEM_MENU|wxMINIMIZE_BOX|wxMAXIMIZE_BOX|wxCLOSE_BOX
#define SYMBOL_GALAXQL_TITLE _("GalaXQL 2.2-dev")
#define SYMBOL_GALAXQL_IDNAME ID_FRAME
#define SYMBOL_GALAXQL_SIZE wxSize(800, 600)
#define SYMBOL_GALAXQL_POSITION wxDefaultPosition
#define ID_RADOPER 10009
#define ID_REGENERATE25K 10010
#define ID_REGENERATE10K 10016
#define ID_REGENERATE1KSPHERE 10017
#define ID_MENU 10022
#define ID_SQLGETINFO 10014
#define ID_SQLCOUNTSTARS 10013
#define ID_PLANETCOUNT 10026
#define ID_MAXPLANETS 10027
#define ID_MENU1 10023
#define ID_SQLRESETHILITE 10015
#define ID_HILIGHT_MOON_PLANETS 10021
#define ID_MENU2 10024
#define ID_SQLSHRINK 10018
#define ID_TURNGALAXY 10025
#define ID_MENURUNQUERY 10034
#define ID_MENUGLOW 10037
#define ID_NORMALRENDER 10040
#define ID_MENULOWQUALITY 10012
#define ID_RENDERGRID 10041
#define ID_SPLITTERWINDOW 10002
#define ID_DISPLAYQUERYSPLITTER 10038
#define ID_PANEL 10003
#define SYMBOL_GFXPANEL_STYLE wxSUNKEN_BORDER|wxTAB_TRAVERSAL
#define SYMBOL_GFXPANEL_IDNAME ID_PANEL
#define SYMBOL_GFXPANEL_SIZE wxDefaultSize
#define SYMBOL_GFXPANEL_POSITION wxDefaultPosition
#define ID_QUERYEDITPANEL 10039
#define ID_QUERYEDIT 10006
#define ID_RUNQUERY 10008
#define ID_NOTEBOOK 10004
#define ID_GURUPANEL 10028
#define ID_CHAPTERSELECT 10029
#define ID_GURUSPEAKS 10030
#define SYMBOL_WXGURUSPEAKSPANEL_STYLE wxSUNKEN_BORDER|wxTAB_TRAVERSAL
#define SYMBOL_WXGURUSPEAKSPANEL_IDNAME ID_GURUSPEAKS
#define SYMBOL_WXGURUSPEAKSPANEL_SIZE wxDefaultSize
#define SYMBOL_WXGURUSPEAKSPANEL_POSITION wxDefaultPosition
#define ID_GURU_DONE 10031
#define ID_QUERYPANEL 10005
#define ID_QUERYRESULT 10007
#define ID_HTMLWINDOW 10020

/* None of the above identifiers are in any order. Were they generated
based on some template? I'm starting from 2xxxx to avoid conflict.
*/
#define MENU_CONTEXT_COPY 20001
#define MENU_CONTEXT_SELECT_ALL 20002
#define MENU_RESET_PREFS 20003
#define MENU_RESET_ALL 20004
////@end control identifiers

/*!
 * Compatibility
 */

#ifndef wxCLOSE_BOX
#define wxCLOSE_BOX 0x1000
#endif
#ifndef wxFIXED_MINSIZE
#define wxFIXED_MINSIZE 0
#endif

/*!
 * Galaxql class declaration
 */

struct sqlite3;

class Query 
{
public:
    int mRows;
    int mColumns;
    // 32 columns should be enough for everyone..
    // TODO: make dynamically allocated
    wxString mResults[1001][32]; 
    wxString mStatus;
};

class Galaxql: public wxFrame
{    
    DECLARE_CLASS( Galaxql )
    DECLARE_EVENT_TABLE()

public:
    /// Constructors
    Galaxql( );
    Galaxql( wxWindow* parent, wxWindowID id = SYMBOL_GALAXQL_IDNAME, const wxString& caption = SYMBOL_GALAXQL_TITLE, const wxPoint& pos = SYMBOL_GALAXQL_POSITION, const wxSize& size = SYMBOL_GALAXQL_SIZE, long style = SYMBOL_GALAXQL_STYLE );

    bool Create( wxWindow* parent, wxWindowID id = SYMBOL_GALAXQL_IDNAME, const wxString& caption = SYMBOL_GALAXQL_TITLE, const wxPoint& pos = SYMBOL_GALAXQL_POSITION, const wxSize& size = SYMBOL_GALAXQL_SIZE, long style = SYMBOL_GALAXQL_STYLE );

    /// Creates the controls and sizers
    void CreateControls();

////@begin Galaxql event handler declarations

    /// wxEVT_COMMAND_MENU_SELECTED event handler for ID_REGENERATE25K
    void OnRegenerate25kClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for ID_REGENERATE10K
    void OnRegenerate10kClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for ID_REGENERATE1KSPHERE
    void OnRegenerate1ksphereClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_BUTTON_CLICKED event handler for MENU_RESET_PREFS
    void OnResetPrefsClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_BUTTON_CLICKED event handler for MENU_RESET_ALL
    void OnResetAllClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for wxID_EXIT
    void OnQuitappClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for ID_SQLGETINFO
    void OnSqlgetinfoClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for ID_SQLCOUNTSTARS
    void OnSqlcountstarsClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for ID_PLANETCOUNT
    void OnPlanetcountClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for ID_MAXPLANETS
    void OnMaxplanetsClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for ID_SQLRESETHILITE
    void OnSqlresethiliteClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for ID_HILIGHT_MOON_PLANETS
    void OnHilightMoonPlanetsClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for ID_SQLSHRINK
    void OnSqlshrinkClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for ID_TURNGALAXY
    void OnTurngalaxyClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for ID_MENURUNQUERY
    void OnMenurunqueryClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for ID_MENUGLOW
    void OnMenuglowClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for ID_NORMALRENDER
    void OnNormalrenderClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for ID_MENULOWQUALITY
    void OnMenulowqualityClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for ID_RENDERGRID
    void OnRendergridClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_MENU_SELECTED event handler for wxID_ABOUT
    void OnAboutClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_BUTTON_CLICKED event handler for wxID_OPEN
    void OnLoadqueryClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_BUTTON_CLICKED event handler for wxID_SAVE
    void OnSavequeryClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_BUTTON_CLICKED event handler for ID_RUNQUERY
    void OnRunqueryClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_NOTEBOOK_PAGE_CHANGED event handler for ID_NOTEBOOK
    void OnNotebookPageChanged( wxNotebookEvent& event );

    /// wxEVT_COMMAND_CHOICE_SELECTED event handler for ID_CHAPTERSELECT
    void OnChapterselectSelected( wxCommandEvent& event );

    /// wxEVT_COMMAND_BUTTON_CLICKED event handler for ID_GURU_DONE
    void OnGuruDoneClick( wxCommandEvent& event );

////@end Galaxql event handler declarations

////@begin Galaxql member function declarations

    /// Retrieves bitmap resources
    wxBitmap GetBitmapResource( const wxString& name );

    /// Retrieves icon resources
    wxIcon GetIconResource( const wxString& name );
////@end Galaxql member function declarations

    void RegenerateWorld(int which);

    void ResetGuruPanelToChapter(int chapter);

    float min_col(Query &q, int colno);
    float max_col(Query &q, int colno);
    int sorted_col(Query &q, int colno);
    int check_pairs(Query &q);
    int equals_col(Query &q, int colno, int value);
    int compare_queries(Query &q1, Query &q2);

    /// Should we show tooltips?
    static bool ShowToolTips();

////@begin Galaxql member variables
    GfxPanel* mGfxPanel;
    SqlQueryCtrl* mQuery;
    wxButton* mLoadQuery;
    wxButton* mSaveQuery;
    wxButton* mRunQuery;
    wxNotebook* mNotebook;
    wxStaticBitmap* mGuruPicture;
    wxChoice* mChapterSelect;
    wxGuruSpeaksPanel* mGuruSpeaks;
    wxButton* mGuruDone;
    wxHtmlWindow* mQueryResult;
    wxHtmlWindow* mHtmlPanel;
////@end Galaxql member variables
    wxImage mGuruNormal, mGuruSad, mGuruHappy, mGuruBadDb, mGuruEaster;
    Query mUserQuery;
    Query mGuruQuery;
};


struct obj
{
    float distance;
    int color;
};

struct hilighted
{
    int starclass;
    float x,y,z;
    int planets;
    obj planet[20];
    int moons[20];
    obj moon[20][20];
};

/*!
 * GfxPanel class declaration
 */

class GfxPanel: public wxGLCanvas
{    
    DECLARE_CLASS( GfxPanel )
    DECLARE_EVENT_TABLE()

public:
    /// Constructors
    GfxPanel( wxWindow* parent, int, wxPoint, wxSize, int);

    // Destructor
    ~GfxPanel();
    
////@begin GfxPanel event handler declarations

////@end GfxPanel event handler declarations

////@begin GfxPanel member function declarations

    /// Retrieves bitmap resources
    wxBitmap GetBitmapResource( const wxString& name );

    /// Retrieves icon resources
    wxIcon GetIconResource( const wxString& name );
////@end GfxPanel member function declarations

    /// Should we show tooltips?
    static bool ShowToolTips();

    void onPaint(wxPaintEvent &event);
    void onEraseBackground(wxEraseEvent &event);
    void onIdle(wxIdleEvent &event);
    void onMouseEvent(wxMouseEvent &event);
    void render(float *vtx, float *col, int count) ;
    void render_system() ;
    
public:
    wxStopWatch mTicker;
    float xpos, ypos;
    float *mCol, *mVtx, *mGatewayVtx;
    int mGateways;
    int mStars;
    int mHilighted;
    hilighted mHilightInfo;
    int mInspectedStar;
    int mRenderWithGlow;
    int mRenderInLowQuality;
    int mRenderGrid;

private:
    wxGLContext mContext;

////@begin GfxPanel member variables
////@end GfxPanel member variables
};

/*!
 * GalaxqlApp class declaration
 */

class GalaxqlApp: public wxApp
{    
    DECLARE_CLASS( GalaxqlApp )
    DECLARE_EVENT_TABLE()

public:
    /// Constructor
    GalaxqlApp();

    /// Initialises the application
    virtual bool OnInit();

    /// Called on exit
    virtual int OnExit();

////@begin GalaxqlApp event handler declarations

////@end GalaxqlApp event handler declarations

////@begin GalaxqlApp member function declarations

////@end GalaxqlApp member function declarations

////@begin GalaxqlApp member variables
////@end GalaxqlApp member variables
    sqlite3 *db;

};

/*!
 * wxGuruSpeaksPanel class declaration
 */

class wxGuruSpeaksPanel: public wxHtmlWindow
{    
    DECLARE_DYNAMIC_CLASS( wxGuruSpeaksPanel )
    DECLARE_EVENT_TABLE()

public:
    /// Constructors
    wxGuruSpeaksPanel( );
    wxGuruSpeaksPanel( wxWindow* parent, wxWindowID id = SYMBOL_WXGURUSPEAKSPANEL_IDNAME, const wxPoint& pos = SYMBOL_WXGURUSPEAKSPANEL_POSITION, const wxSize& size = SYMBOL_WXGURUSPEAKSPANEL_SIZE, long style = SYMBOL_WXGURUSPEAKSPANEL_STYLE );

    /// Creation
    bool Create( wxWindow* parent, wxWindowID id = SYMBOL_WXGURUSPEAKSPANEL_IDNAME, const wxPoint& pos = SYMBOL_WXGURUSPEAKSPANEL_POSITION, const wxSize& size = SYMBOL_WXGURUSPEAKSPANEL_SIZE, long style = SYMBOL_WXGURUSPEAKSPANEL_STYLE );

    /// Creates the controls and sizers
    void CreateControls();

    virtual void OnLinkClicked(const wxHtmlLinkInfo& link);

////@begin wxGuruSpeaksPanel event handler declarations

    void OnContextMenu(wxContextMenuEvent &event);
    void OnContextMenu_Copy(wxCommandEvent &event);
    void OnContextMenu_SelectAll(wxCommandEvent &event);

////@end wxGuruSpeaksPanel event handler declarations

////@begin wxGuruSpeaksPanel member function declarations

    /// Retrieves bitmap resources
    wxBitmap GetBitmapResource( const wxString& name );

    /// Retrieves icon resources
    wxIcon GetIconResource( const wxString& name );
////@end wxGuruSpeaksPanel member function declarations

    /// Should we show tooltips?
    static bool ShowToolTips();

////@begin wxGuruSpeaksPanel member variables
////@end wxGuruSpeaksPanel member variables
};

#endif
    // _GALAXQL_H_
